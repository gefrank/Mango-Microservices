@page "/coupon/delete/{CouponId:int}"

@using Mango.Blazor.Models
@using Mango.Blazor.Service.IService
@using Mango.Blazor.Models.Enums
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "ADMIN")]

@inject ICouponService CouponService
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<div class="container border p-3">
    <h1 class="text-white text-center">Delete Coupon</h1>
    <hr />
    @if (Coupon != null)
    {
        <div class="row">
            <div class="col-2">
                <label class="control-label pt-2" style="font-size:20px;">Coupon Code</label>
            </div>
            <div class="col-10 pb-3">
                <input type="text" disabled class="form-control" value="@Coupon.CouponCode" />
            </div>
            <div class="col-2">
                <label class="control-label pt-2" style="font-size:20px;">Discount Amount</label>
            </div>
            <div class="col-10 pb-3">
                <input type="text" disabled class="form-control" value="@Coupon.DiscountAmount.ToString("c")" />
            </div>
            <div class="col-2">
                <label class="control-label pt-2" style="font-size:20px;">Minimum Amount</label>
            </div>
            <div class="col-10 pb-3">
                <input type="text" disabled class="form-control" value="@Coupon.MinAmount.ToString("c")" />
            </div>

            <div class="col-5 offset-2">
                <a href="/coupon" class="btn-primary btn form-control">Back to List</a>
            </div>
            <div class="col-5">
                <button type="button" class="btn btn-danger form-control" @onclick="HandleDelete">Delete</button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int CouponId { get; set; }

    private CouponDTO? Coupon;

    protected override async Task OnInitializedAsync()
    {
        var response = await CouponService.GetCouponByIdAsync(CouponId);

        if (response != null && response.IsSuccess)
        {
            Coupon = JsonConvert.DeserializeObject<CouponDTO>(Convert.ToString(response.Result)!);
        }
        else
        {
            ToastService.ShowToast(ToastLevel.Error, response?.Message ?? "Error loading coupon");
            NavigationManager.NavigateTo("/coupon");
        }
    }

    private async Task HandleDelete()
    {
        var response = await CouponService.DeleteCouponAsync(CouponId);

        if (response != null && response.IsSuccess)
        {
            ToastService.ShowToast(ToastLevel.Success, "Coupon deleted successfully");
            NavigationManager.NavigateTo("/coupon");
        }
        else
        {
            ToastService.ShowToast(ToastLevel.Error, response?.Message ?? "Error deleting coupon");
        }
    }
}
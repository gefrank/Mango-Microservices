@page "/"
@using Newtonsoft.Json
@using Mango.Blazor.Models
@using Mango.Blazor.Models.Enums
@using Mango.Blazor.Service.IService
@using System.IdentityModel.Tokens.Jwt
@using Microsoft.AspNetCore.Authorization

@inject HttpClient _http
@inject NavigationManager _navigationManager
@inject IProductService _productService
@inject ICartService _cartService
@inject IToastService _toastService
@inject AuthenticationStateProvider _authenticationStateProvider

<div class="container row">
    @if (products != null)
    {
        @foreach (var product in products)
        {
            <div class="col-12 col-md-6 col-lg-4">
                <div class="p-0 my-3 border rounded">
                    <div class="card">
                        <h3 class="card-title text-white-50 text-center py-2">@product.Name</h3>
                        <img src="@product.ImageUrl" class="card-img-top">
                        <div class="card-body">
                            <div class="d-flex justify-content-between py-2">
                                <span class="text-danger" style="font-size:20px;">@string.Format("{0:c}", product.Price)</span>
                                <span class="badge bg-warning text-white p-2">@product.CategoryName</span>
                            </div>
                            <p class="card-text">@((MarkupString)product.Description)</p>
                            <div class="row">
                                <div class="col-6">
                                    <button type="button" @onclick="@(() => _navigationManager.NavigateTo($"ProductDetails/{product.ProductId}"))"
                                            class="btn btn-success form-control">
                                        Details
                                    </button>
                                </div>
                                <div class="col-6">
                                    <button type="button" @onclick="@(() => AddToCart(product))"
                                            class="btn btn-primary form-control">
                                        <i class="bi bi-cart-plus"></i> Add to Cart
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private IEnumerable<ProductDTO> products;

    protected override async Task OnInitializedAsync()
    {
        var response = await _productService.GetAllProductsAsync();
        if (response != null && response.IsSuccess)
        {
            products = JsonConvert.DeserializeObject<List<ProductDTO>>(Convert.ToString(response.Result)!)!;
            StateHasChanged();
        }
    }

    private async Task AddToCart(ProductDTO product)
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            _navigationManager.NavigateTo("/login");
            return;
        }

        CartDTO cartDTO = new()
        {
            CartHeader = new CartHeaderDTO
            {
                UserId = user.Claims.FirstOrDefault(c => c.Type == JwtRegisteredClaimNames.Sub)?.Value
            }
        };

        CartDetailsDTO cartDetails = new()
        {
            Count = 1,
            ProductId = product.ProductId,
        };

        cartDTO.CartDetails = new List<CartDetailsDTO> { cartDetails };

        var response = await _cartService.UpsertCartAsync(cartDTO);

        if (response != null && response.IsSuccess)
        {
            _toastService.ShowToast(ToastLevel.Success, "Item has been added to the Shopping Cart");
        }
        else
        {
            _toastService.ShowToast(ToastLevel.Error, response?.Message ?? "Error adding to cart");
        }
    }
}
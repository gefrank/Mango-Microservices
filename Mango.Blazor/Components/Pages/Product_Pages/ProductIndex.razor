@page "/product"
@page "/Product/ProductIndex"

@using Mango.Blazor.Models
@using Mango.Blazor.Service.IService
@using Mango.Blazor.Models.Enums
@using Newtonsoft.Json

@inject IProductService ProductService
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h1 class="text-white">Products List</h1>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <div class="row pb-3">
            <div class="col-6">
            </div>
            <div class="col-6 text-end">
                <a href="/product/create" class="btn btn-outline-primary"><i class="bi bi-plus-square"></i> Create New Product</a>
            </div>
        </div>
        @if (Products == null)
        {
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Category Name</th>
                        <th>Price</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Products)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.CategoryName</td>
                            <td>@(item.Price.ToString("c"))</td>
                            <td>
                                <div class="d-inline-flex gap-2">
                                    <a href="@($"/product/edit/{item.ProductId}")" class="btn btn-success btn-md">
                                        <i class="bi bi-pencil-square"></i>&nbsp;Edit
                                    </a>
                                    <button @onclick="() => HandleDelete(item.ProductId)" class="btn btn-danger btn-md">
                                        <i class="bi bi-trash"></i>&nbsp;Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    private List<ProductDTO>? Products;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        var response = await ProductService.GetAllProductsAsync();

        if (response != null && response.IsSuccess)
        {
            Products = JsonConvert.DeserializeObject<List<ProductDTO>>(Convert.ToString(response.Result)!);
        }
        else
        {
            ToastService.ShowToast(ToastLevel.Error, response?.Message ?? "Error loading products");
        }
    }

    private async Task HandleDelete(int productId)
    {
        var response = await ProductService.DeleteProductAsync(productId);

        if (response != null && response.IsSuccess)
        {
            ToastService.ShowToast(ToastLevel.Success, "Product deleted successfully");
            await LoadProducts(); // Refresh the list
        }
        else
        {
            ToastService.ShowToast(ToastLevel.Error, response?.Message ?? "Error deleting product");
        }
    }
}